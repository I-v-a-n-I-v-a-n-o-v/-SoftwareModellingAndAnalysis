CREATE DATABASE [JOB_SYSTEM]

CREATE TABLE [USERS]
(
	USER_ID INT PRIMARY KEY IDENTITY(1,1),
	EMAIL VARCHAR(50) UNIQUE NOT NULL,
	[PASSWORD] VARCHAR (50) NOT NULL
);

GO

CREATE TABLE COUNTRIES
(
    ID INT PRIMARY KEY IDENTITY(1,1),
    [NAME] VARCHAR(60)  NOT NULL UNIQUE
);

GO

CREATE TABLE GENDERS
(
    ID INT PRIMARY KEY IDENTITY(1,1),
    [NAME] VARCHAR(30) NOT NULL UNIQUE
);

GO
--CAN BE REMOTE, PART-TIME, FULL-TIME..
CREATE TABLE [TYPES]
(
    TYPE_ID INT PRIMARY KEY IDENTITY(1,1),
    [NAME] VARCHAR(30) NOT NULL UNIQUE
);

GO

CREATE TABLE CATEGORIES
(
    ID INT PRIMARY KEY IDENTITY(1,1),
    [NAME] VARCHAR(30) NOT NULL UNIQUE
);

GO

CREATE TABLE [CLIENTS]
(
    CLIENT_ID INT PRIMARY KEY IDENTITY(1,1),
    USER_ID INT FOREIGN KEY REFERENCES [USERS](USER_ID) ON DELETE CASCADE NOT NULL,
    USERNAME VARCHAR(30) UNIQUE,
    [NAME] VARCHAR(80) NOT NULL,
    AGE INT NOT NULL,
    BIOGRAPHY VARCHAR(1000),
    COUNTRY_ID INT FOREIGN KEY REFERENCES COUNTRIES(ID),
    GENDER_ID INT FOREIGN KEY REFERENCES GENDERS(ID)
);

GO 

CREATE TABLE EMPLOYERS
(
    EMPLOYER_ID INT PRIMARY KEY IDENTITY(1,1),
    USER_ID INT FOREIGN KEY REFERENCES [USERS](USER_ID) ON DELETE CASCADE NOT NULL,
    [NAME] VARCHAR(60) NOT NULL,
    [INFO] VARCHAR(500),
    FOUNDED_IN DATE
);

GO 

CREATE TABLE JOBS
(
    JOB_ID INT PRIMARY KEY IDENTITY(1,1),
	EMPLOYER_ID INT FOREIGN KEY REFERENCES [EMPLOYERS](EMPLOYER_ID) ON DELETE CASCADE NOT NULL,
    TITLE VARCHAR(50) NOT NULL,
    [DESCRIPTION] VARCHAR(500) NOT NULL,
    PUBLISHED_ON DATETIME NOT NULL
);

GO

--PENDING, APPROVED, DISAPPROVED
CREATE TABLE [STATUS]
(
    ID INT PRIMARY KEY IDENTITY(1,1),
    [NAME] VARCHAR(30) NOT NULL UNIQUE
);

GO

CREATE TABLE ARTICLES
(
    ID INT PRIMARY KEY IDENTITY(1,1),
    TITLE VARCHAR(50) NOT NULL,
    [DESCRIPTION] VARCHAR(1000) NOT NULL,
    PUBLISHED_ON DATETIME NOT NULL,
    EMPLOYER_ID INT  FOREIGN KEY REFERENCES EMPLOYERS(EMPLOYER_ID) NOT NULL
);

GO

CREATE TABLE APPLIED_JOBS
(
    ID INT PRIMARY KEY IDENTITY(1,1),
    JOB_ID INT FOREIGN KEY REFERENCES JOBS(JOB_ID) NOT NULL,
    CLIENT_ID INT FOREIGN KEY REFERENCES CLIENTS(CLIENT_ID) NOT NULL,
    STATUS_ID INT FOREIGN KEY REFERENCES STATUS(ID) NOT NULL, 
	APPLIED_DATE DATETIME NOT NULL,
	ARTICLE_ID INT FOREIGN KEY REFERENCES ARTICLES(ID)
);

GO

CREATE TABLE JOB_CATEGORY
(
    JOB_CATEGORY_ID INT PRIMARY KEY IDENTITY(1,1),
    JOB_ID INT FOREIGN KEY REFERENCES JOBS(JOB_ID) NOT NULL,
    CATEGORY_ID INT FOREIGN KEY REFERENCES CATEGORIES(ID) NOT NULL
);

go

CREATE TABLE JOB_TYPE
(
    JOB_TYPE_ID INT PRIMARY KEY IDENTITY(1,1),
    JOB_ID INT FOREIGN KEY REFERENCES JOBS(JOB_ID) NOT NULL,
    TYPE_ID INT FOREIGN KEY REFERENCES [TYPES](TYPE_ID) NOT NULL
);

-----------------------------------------------------------------------
GO

ALTER TABLE [JOBS]
--CAN BE IT, ADMINISTRATION, FINANCIAL ETC
ADD JOB_CATEGORY_ID INT
    CONSTRAINT FK_JOB_CATEGORY_ID 
        FOREIGN KEY (JOB_CATEGORY_ID) 
        REFERENCES JOB_CATEGORY(JOB_CATEGORY_ID);

GO

------------------------------

--INSERTING VALUES INTO TABLES

--Users
SET IDENTITY_INSERT [USERS] OFF
INSERT INTO USERS(USER_ID, EMAIL, [PASSWORD])
VALUES(1, 'ivan.ivanov3902@gmail.com','SoftwareEngineering');

INSERT INTO USERS(USER_ID, EMAIL, [PASSWORD])
VALUES(2, 'georgi@gmail.com','GoshetoTheBest');

INSERT INTO USERS(USER_ID, EMAIL, [PASSWORD])
VALUES(3, 'dragan.cankov@abv.bg','parolataBG');

INSERT INTO USERS(USER_ID, EMAIL, [PASSWORD])
VALUES(4, 'gergana@outlook.com','Gergana''sPassword');

INSERT INTO USERS(USER_ID, EMAIL, [PASSWORD])
VALUES(5, 'sinergi@gmail.com','sinergi123');

INSERT INTO USERS(USER_ID, EMAIL, [PASSWORD])
VALUES(6, 'billa@yahoo.com','billa milla dilla gilla tilla and so on');

INSERT INTO USERS(USER_ID, EMAIL, [PASSWORD])
VALUES(7, 'lidle@gmail.com','lidle midle fidle riddle');

GO

--COUNTRIES
SET IDENTITY_INSERT [COUNTRIES] OFF
INSERT INTO COUNTRIES(ID, NAME)
VALUES(1,'Bulgaria');

INSERT INTO COUNTRIES(ID, NAME)
VALUES(2,'Canada');

INSERT INTO COUNTRIES(ID, NAME)
VALUES(3,'Australia');

GO

--GENDERS
SET IDENTITY_INSERT [GENDERS] OFF
INSERT INTO GENDERS(ID, NAME)
VALUES(1,'Male');

INSERT INTO GENDERS(ID, NAME)
VALUES(2,'Female');

INSERT INTO GENDERS(ID, NAME)
VALUES(3,'Hermaphrodite');

GO

--Clients

SET IDENTITY_INSERT [CLIENTS] OFF
INSERT INTO CLIENTS(CLIENT_ID, USER_ID, USERNAME, [NAME], AGE, BIOGRAPHY, COUNTRY_ID, GENDER_ID)
VALUES(1, 1,'johnkata', 'Ivan Iliqnov Ivanov', 22, 'Lorem Ipsu Dolar', 1, 1);

INSERT INTO CLIENTS(CLIENT_ID, USER_ID, USERNAME, [NAME], AGE, BIOGRAPHY, COUNTRY_ID, GENDER_ID)
VALUES(2, 2,'gogo', 'Georgi Georgiev Georgiev', 89, 'Lorem Ipsu Dolar again and again ', 2, 1);

INSERT INTO CLIENTS(CLIENT_ID, USER_ID, USERNAME, [NAME], AGE, BIOGRAPHY, COUNTRY_ID, GENDER_ID)
VALUES(3, 3,'dragoChaqt', 'Dragan Kirqkov Cankov', 105, 'Lorem Ipsu Dolar again and again till the end of the world!!!', 3, 1);

INSERT INTO CLIENTS(CLIENT_ID, USER_ID, USERNAME, [NAME], AGE, BIOGRAPHY, COUNTRY_ID, GENDER_ID)
VALUES(4, 4,'gerdzhi', 'Gergana Milenova Stratieva', 19, 'Lorem Ipsu Dolar Lorem Ipsu DolarLorem Ipsu Dolar',1, 2);

GO

--Employers
SET IDENTITY_INSERT [EMPLOYERS] OFF
INSERT INTO EMPLOYERS(EMPLOYER_ID, USER_ID, [NAME], INFO, FOUNDED_IN)
VALUES(1, 5, 'Sinergi GFC', 'Mobile Development', '2014');

INSERT INTO EMPLOYERS(EMPLOYER_ID, USER_ID, [NAME], INFO, FOUNDED_IN)
VALUES(2, 6, 'Billa', 'Stocks', '2006');

INSERT INTO EMPLOYERS(EMPLOYER_ID, USER_ID, [NAME], INFO, FOUNDED_IN)
VALUES(3, 7, 'Lidle', 'Stocks', '2008');

GO

--JOBS
SET IDENTITY_INSERT [JOBS] OFF
INSERT INTO JOBS(JOB_ID, EMPLOYER_ID, TITLE, [DESCRIPTION], PUBLISHED_ON)
VALUES(1, 1, 'Back-End developer', 'Something in the description!', '2008-8-8');

INSERT INTO JOBS(JOB_ID, EMPLOYER_ID, TITLE, [DESCRIPTION], PUBLISHED_ON)
VALUES(2, 2, 'Mobile developer', 'Something in the description again!', '2022');

INSERT INTO JOBS(JOB_ID, EMPLOYER_ID, TITLE, [DESCRIPTION], PUBLISHED_ON)
VALUES(3, 3, 'Front-End developer', 'There is no need to say that there is Something in the description again!', '2021');

GO

--TYPES
SET IDENTITY_INSERT [TYPES] OFF
INSERT INTO [TYPES]([TYPE_ID],[NAME])
VALUES(1,'FULL-TIME');

INSERT INTO [TYPES]([TYPE_ID],[NAME])
VALUES(2,'PART-TIME');

INSERT INTO [TYPES]([TYPE_ID],[NAME])
VALUES(3,'REMOTE');

SELECT * FROM TYPES

GO

--CATEGORIES
SET IDENTITY_INSERT CATEGORIES OFF
INSERT INTO CATEGORIES(ID, NAME)
VALUES(1,'IT');

INSERT INTO CATEGORIES(ID, NAME)
VALUES(2,'Financial');

INSERT INTO CATEGORIES(ID, NAME)
VALUES(3,'Administration');

GO

--STATUS
SET IDENTITY_INSERT [STATUS] OFF
INSERT INTO [STATUS](ID, NAME)
VALUES(1,'Pending');

INSERT INTO [STATUS](ID, NAME)
VALUES(2,'Approved');

INSERT INTO [STATUS](ID, NAME)
VALUES(3,'Disapproved');

GO

--ARTICLES
SET IDENTITY_INSERT ARTICLES OFF
INSERT INTO [ARTICLES](ID, TITLE,[DESCRIPTION], PUBLISHED_ON, EMPLOYER_ID)
VALUES(1,'TITLE', 'DESCRIPTION', '2008-11-11 13:23:44', 1) ;

INSERT INTO [ARTICLES](ID, TITLE,[DESCRIPTION], PUBLISHED_ON, EMPLOYER_ID)
VALUES(2,'TITLE2', 'DESCRIPTION2','2008-11-11 13:23:44',2) ;

INSERT INTO [ARTICLES](ID, TITLE,[DESCRIPTION], PUBLISHED_ON, EMPLOYER_ID)
VALUES(3,'TITLE3', 'DESCRIPTION3','2022-11-11 13:23:44',3) ;

GO

--APPLIED_JOBS
SET IDENTITY_INSERT APPLIED_JOBS OFF
INSERT INTO APPLIED_JOBS(ID, JOB_ID, CLIENT_ID, STATUS_ID, APPLIED_DATE, ARTICLE_ID)
VALUES(1, 1, 1,1, '2022-11-11 13:23:44',1) ;

INSERT INTO APPLIED_JOBS(ID, JOB_ID, CLIENT_ID, STATUS_ID, APPLIED_DATE, ARTICLE_ID)
VALUES(2, 3, 1,2, '2022-11-11 13:45:44',2) ;

INSERT INTO APPLIED_JOBS(ID, JOB_ID, CLIENT_ID, STATUS_ID, APPLIED_DATE, ARTICLE_ID)
VALUES(3, 1,2,1, '2022-12-12 16:05:05',1) ;

GO

--JOB_CATEGORY
SET IDENTITY_INSERT JOB_CATEGORY OFF
INSERT INTO JOB_CATEGORY(JOB_CATEGORY_ID, JOB_ID,CATEGORY_ID)
VALUES(1, 1,1) ;

INSERT INTO JOB_CATEGORY(JOB_CATEGORY_ID, JOB_ID,CATEGORY_ID)
VALUES(2, 1,2) ;

INSERT INTO JOB_CATEGORY(JOB_CATEGORY_ID, JOB_ID,CATEGORY_ID)
VALUES(3, 1,3) ;

INSERT INTO JOB_CATEGORY(JOB_CATEGORY_ID, JOB_ID,CATEGORY_ID)
VALUES(4, 2,1) ;

INSERT INTO JOB_CATEGORY(JOB_CATEGORY_ID, JOB_ID,CATEGORY_ID)
VALUES(5, 2,3) ;

INSERT INTO JOB_CATEGORY(JOB_CATEGORY_ID, JOB_ID,CATEGORY_ID)
VALUES(6, 3,2) ;

GO

--JOB_TYPE
SET IDENTITY_INSERT JOB_TYPE ON
INSERT INTO JOB_TYPE(JOB_TYPE_ID, JOB_ID, [TYPE_ID])
VALUES(1, 1,1) ;

INSERT INTO JOB_TYPE(JOB_TYPE_ID, JOB_ID, [TYPE_ID])
VALUES(2, 2,1) ;

INSERT INTO JOB_TYPE(JOB_TYPE_ID, JOB_ID, [TYPE_ID])
VALUES(3, 3,1) ;

GO

UPDATE JOBS
   SET JOB_CATEGORY_ID = 1
WHERE JOB_ID = 3
SELECT * FROM JOBS

GO

--FUNCTIONS
CREATE FUNCTION CLIENT_INFO(@CLIENT_ID INT)
RETURNS TABLE
AS
RETURN
(
SELECT CLIENTS.CLIENT_ID, CLIENTS.USERNAME, CLIENTS.[NAME], CLIENTS.BIOGRAPHY, CLIENTS.AGE, CLIENTS.COUNTRY_ID, CLIENTS.GENDER_ID
FROM CLIENTS
WHERE @CLIENT_ID = CLIENTS.CLIENT_ID
)

SELECT * FROM CLIENT_INFO(1)

GO 

--STORED PREOCEDURE
CREATE PROCEDURE JOBS_PUBLISHED_DATE_ASC
AS
BEGIN
	SELECT
	JOB_ID,
	EMPLOYER_ID
	TITLE ,
	[DESCRIPTION],
	PUBLISHED_ON
	FROM JOBS
	ORDER BY PUBLISHED_ON;
END;

EXEC JOBS_PUBLISHED_DATE_ASC;
SELECT * FROM JOBS

GO

--TRIGGER
CREATE TRIGGER DELETE_USER
ON USERS
INSTEAD OF DELETE 
AS
BEGIN
	DECLARE @DELETED_USER_ID INT
	SET @DELETED_USER_ID  = (SELECT USER_ID FROM DELETED)
	DELETE FROM CLIENTS WHERE USER_ID  = @DELETED_USER_ID
	DELETE FROM EMPLOYERS WHERE USER_ID  = @DELETED_USER_ID
end;